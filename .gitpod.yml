github:
  prebuilds:    
    master: true    
    branches: true    
    pullRequests: true    
    pullRequestsFromForks: false    
    addCheck: true    
    addComment: false    
    addBadge: false

tasks:
  - name: workspace setup
    env:
      AWS_CLI_AUTO_PROMPT: on-partial
    before: |
      cd $THEIA_WORKSPACE_ROOT
      curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
      echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list  
      sudo apt update
      sudo apt install -y postgresql-client-13 libpq-dev
      curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
      sudo dpkg -i session-manager-plugin.deb
    init: |
      cd /workspace
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      cd $THEIA_WORKSPACE_ROOT
      # pre-build steps for frontend and backend
      # Install requirements for backend-flask container
      cd $THEIA_WORKSPACE_ROOT/backend-flask
      pip3 install -r requirements.txt
      pip install cfn-lint
      # Initialize npm insatll
      cd $THEIA_WORKSPACE_ROOT/frontend-react-js
      npm i        
      sudo apt install -y postgresql-client-13 libpq-dev
      # Install CFN Guard
      cargo install cfn-guard               
  - command: |
      sudo /workspace/aws/install
      npm install aws-cdk -g
      cd /workspace/aws-bootcamp-cruddur-2023/thumbing-serverless-cdk
      source "/workspace/aws-bootcamp-cruddur-2023/bin/avatar/build"
      cp .env.example .env
      export GITPOD_IP=$(curl ifconfig.me)
      source "/workspace/aws-bootcamp-cruddur-2023/bin/rds/update-sg-rule" 
      cd /workspace/aws-bootcamp-cruddur-2023
      $THEIA_WORKSPACE_ROOT/bin/backend/generate-env
      $THEIA_WORKSPACE_ROOT/bin/frontend/generate-env
vscode:
  extensions:
    - 42Crunch.vscode-openapi
    - cweijan.vscode-postgresql-client2

ports:
  - name: frontend
    port: 3000
    onOpen: open-browser
    visibility: public
  - name: backend
    port: 4567
    visibility: public
  - name: xray-daemon
    port: 2000
    visibility: public
  - name: postgres
    port: 5432
    visibility: public
  - name: dynamodb
    port: 8000
    visibility: public        
